version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mini-bank-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${PORT:-8080}:8080"
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8080
    networks:
      - mini-bank-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16.2-alpine
    container_name: mini-bank-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER:-minibank_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-minibank_pass}
      - POSTGRES_DB=${DB_NAME:-mini_bank}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mini-bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-minibank_user} -d mini_bank"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7.2-alpine
    container_name: mini-bank-redis
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_pass} --appendonly yes
    networks:
      - mini-bank-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_pass}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

networks:
  mini-bank-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local